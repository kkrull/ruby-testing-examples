{"name":"Ruby-testing-examples","tagline":"Examples of how to use RSpec and Cucumber for testing ruby","body":"# Ruby Testing Examples\r\n\r\nA sandbox environment showing how to use different features in RSpec and Cucumber, as well as how to make the two work\r\ntogether.\r\n\r\n## RSpec features\r\n\r\nRSpec scenarios use a variety of helper modules to DRY up test code in each spec.\r\n\r\n- Local to one spec file: `spec/has_internal_help_spec.rb`\r\n- Global among all specs: `spec/includes_external_help_spec.rb`\r\n- Universal between RSpec and Cucumber: `spec/includes_shared_help_spec.rb`\r\n\r\nThese work by calling `RSpec.configure#include` in `spec/spec_helper.rb` (which is automatically required in `.rspec`)\r\nfor each module that you want to be available in all the specs.  Note that `.rspec` also adds `test/` to `$LOAD_PATH` so\r\nthat specs can `require 'support/shared_module'`.\r\n\r\nOther ways of sharing code among specs have some negative consequences:\r\n\r\n- If you open up a production class and add methods to it, those methods are around for good and are now available for\r\n  (accidental) use in production code.  This happens even if your test-specific methods are in a file in `spec/`, due to\r\n  the global way in which `require` works.\r\n- `shared_context` works great for specs, but doesn't do much to help in Cucumber scenarios.\r\n\r\n## Cucumber features\r\n\r\nCucumber scenarios also use a variety of helper modules for the same reason as you do in RSpec - to DRY up the code.\r\nFor example:\r\n\r\n- Cucumber-specific helper modules: `features/support/cucumber_helper.rb`\r\n- Universally shared modules between RSpec and Cucumber: `features/get_help.feature`\r\n\r\nCucumber includes modules into the base World object by calling `World( <module> )`.  In order to require a module, its\r\npath must be reachable from one of the entries in `$LOAD_PATH`.  `features/support/env.rb` does this by calling\r\n`Cucumber::LoadPath.add_dirs` with the shared helper directory (`test/`).\r\n\r\n## Guard\r\n\r\nLook at `Guardfile` to see the files that can trigger running RSpec tests and Cucumber scenarios.  Note the additional\r\nwatch patterns for `test/support`, `.rspec` and `spec/spec_helper.rb`.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}